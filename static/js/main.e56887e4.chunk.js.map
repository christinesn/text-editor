{"version":3,"sources":["ToolbarButtons.js","useFullscreen.js","newDocument.js","useDocumentActions.js","Editor.js","LightTheme.js","DarkTheme.js","DownloadDialog.js","useDownload.js","KeyboardShortcuts.js","Menu.js","DocumentsDrawer.js","App.js","serviceWorker.js","index.js"],"names":["BoldButton","createInlineStyleButton","style","children","icon","faBold","title","UnderlineButton","faUnderline","ItalicButton","faItalic","BlockquoteButton","createBlockStyleButton","blockType","faList","faQuoteRight","CenterButton","faAlignCenter","useFullscreen","React","useState","fullscreen","setFullscreen","isFullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","mozFullScreen","webkitIsFullScreene","fullScreenMode","useEffect","handleFullscreenChange","addEventListener","removeEventListener","toggleFullscreen","doc","documentElement","requestFullscreen","moxRequestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","moxCancelFullscreen","webkitExitFullscreen","msExitFullscreen","fullscreenPossible","newDocument","editorState","EditorState","createWithContent","ContentState","createFromText","useDocumentActions","saves","setSaves","setTitle","setEditorState","switchToDocument","newSaves","map","save","id","open","convertFromRaw","content","deleteDocument","filter","i","length","convertToRaw","getCurrentContent","date","Date","now","latest","sort","a","b","createNewDocument","newSave","concat","saveDocument","DefaultDraftBlockRenderMap","merge","centered","element","inlineToolbarPlugin","createInlineToolbarPlugin","InlineToolbar","Editor","scrollControl","useRef","theme","useTheme","scrollWithInput","newState","getLastChangeType","currentBlockKey","getSelection","getStartKey","blockMap","getBlockMap","keySeq","findIndex","k","size","inLastBlock","current","scrollIntoView","css","fontFamily","margin","marginTop","fontSize","lineHeight","transition","width","breakpoints","sm","md","lg","xl","textAlign","borderLeft","blockquote","borderColor","marginLeft","paddingLeft","background","toolbar","border","boxShadow","borderTopColor","cursor","color","hover","active","separator","height","rows","value","onChange","e","target","aria-label","padding","resize","fontWeight","marginBottom","outline","keyBindingFn","KeyBindingUtil","hasCommandModifier","keyCode","getDefaultKeyBinding","handleKeyCommand","command","state","RichUtils","toggleBlockType","plugins","blockStyleFn","contentBlock","getType","ariaLabel","toolbarStyles","buttonStyles","buttons","externalProps","Fragment","ref","display","LightTheme","name","smpx","mdpx","lgpx","xlpx","button","disabledColor","disabledBackground","hoverColor","hoverBackground","focusBackground","tooltip","dialog","avatarColor","avatarBackground","itemHover","itemFocus","drawer","shadow","dateColor","pre","DarkTheme","highlight","DownloadDialog","setOpen","all","htmlStart","htmlEnd","formatDate","format","formatFilename","substring","body","getPlainText","docAsHTML","options","defaultBlockTag","blockRenderers","block","stateToHTML","getBlocksAsArray","blob","Blob","type","filename","dateFilename","docAsMarkdown","markdown","stateToMarkdown","replace","titleMarkdown","docAsPlaintext","docs","formattedDocs","zip","JSZip","forEach","file","generateAsync","zipBlob","saveAs","downloadDocAsHTML","autobom","downloadDocAsMarkdown","downloadDocAsPlaintext","downloadAll","useDownload","handleHTMLDownload","Dialog","onClose","aria-labelledby","minWidth","backgroundColor","DialogTitle","paddingBottom","List","ListItem","onClick","ListItemAvatar","aria-hidden","Avatar","faCode","ListItemText","primary","faMarkdown","faTextHeight","KeyboardShortcuts","aria-describedby","marginRight","DialogContent","DialogContentText","className","Menu","themeName","setThemeName","keepIconsVisible","setKeepIconsVisible","downloadDialogOpen","setDownloadDialogOpen","keyboardShortcutsOpen","setKeyboardShortcutsOpen","shown","setShown","timer","setTimer","wordCount","setWordCount","fullscreenTitle","themeTitle","calculateWordCount","split","handleMousemove","clearInterval","window","setInterval","position","top","right","opacity","Tooltip","placement","IconButton","disableFocusRipple","onFocus","faExpandArrowsAlt","faPlusCircle","faAdjust","faDownload","faKeyboard","faEye","toLocaleString","onMouseOver","disableRipple","faCalculator","faSave","DocumentsDrawer","showButton","setShowButton","closeButton","formatDocumentTitle","text","blocks","focus","left","borderRadius","faFolderOpen","faCaretRight","Drawer","variant","anchor","SlideProps","timeout","borderRight","borderBottom","float","faCaretLeft","overflow","key","dense","data-testid","borderTop","secondary","textOverflow","paddingRight","whiteSpace","ListItemSecondaryAction","faTrashAlt","App","drawerOpen","setDrawerOpen","localStorage","getItem","parsed","JSON","parse","moveFocusToEnd","setItem","stringify","settings","styles","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e56887e4.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  createBlockStyleButton,\n  createInlineStyleButton\n} from \"draft-js-buttons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBold,\n  faItalic,\n  faUnderline,\n  faList,\n  faQuoteRight,\n  faAlignCenter\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const BoldButton = createInlineStyleButton({\n  style: \"BOLD\",\n  children: <FontAwesomeIcon icon={faBold} title=\"Bold\" />\n});\n\nexport const UnderlineButton = createInlineStyleButton({\n  style: \"UNDERLINE\",\n  children: <FontAwesomeIcon icon={faUnderline} title=\"Underline\" />\n});\n\nexport const ItalicButton = createInlineStyleButton({\n  style: \"ITALIC\",\n  children: <FontAwesomeIcon icon={faItalic} title=\"Italic\" />\n});\n\nexport const UnorderedListButton = createBlockStyleButton({\n  blockType: \"unordered-list-item\",\n  children: <FontAwesomeIcon icon={faList} title=\"Bullet list\" />\n});\n\nexport const BlockquoteButton = createBlockStyleButton({\n  blockType: \"blockquote\",\n  children: <FontAwesomeIcon icon={faQuoteRight} title=\"Blockquote\" />\n});\n\nexport const CenterButton = createBlockStyleButton({\n  blockType: \"centered\",\n  children: <FontAwesomeIcon icon={faAlignCenter} title=\"Center\" />\n});\n","import React from \"react\";\n\nexport function useFullscreen() {\n  const [fullscreen, setFullscreen] = React.useState(false);\n\n  function isFullscreen() {\n    return (\n      document.fullscreenElement ||\n      document.mozFullScreenElement ||\n      document.webkitFullscreenElement ||\n      document.msFullscreenElement ||\n      document.fullscreen ||\n      document.mozFullScreen ||\n      document.webkitIsFullScreene ||\n      document.fullScreenMode\n    );\n  }\n\n  React.useEffect(() => {\n    function handleFullscreenChange() {\n      if (isFullscreen()) {\n        setFullscreen(true);\n      } else {\n        setFullscreen(false);\n      }\n    }\n\n    document.addEventListener(\"webkitfullscreenchange\", handleFullscreenChange);\n    document.addEventListener(\"mozfullscreenchange\", handleFullscreenChange);\n    document.addEventListener(\"fullscreenchange\", handleFullscreenChange);\n    document.addEventListener(\"msfullscreenchange\", handleFullscreenChange);\n\n    return () => {\n      document.removeEventListener(\n        \"webkitfullscreenchange\",\n        handleFullscreenChange\n      );\n      document.removeEventListener(\n        \"mozfullscreenchange\",\n        handleFullscreenChange\n      );\n      document.removeEventListener(\"fullscreenchange\", handleFullscreenChange);\n      document.removeEventListener(\n        \"msfullscreenchange\",\n        handleFullscreenChange\n      );\n    };\n  }, []);\n\n  function toggleFullscreen() {\n    const doc = document.documentElement;\n\n    if (!isFullscreen()) {\n      if (doc.requestFullscreen) {\n        doc.requestFullscreen();\n      } else if (doc.moxRequestFullscreen) {\n        doc.moxRequestFullscreen();\n      } else if (doc.webkitRequestFullscreen) {\n        doc.webkitRequestFullscreen();\n      } else if (doc.msRequestFullscreen) {\n        doc.msRequestFullscreen();\n      }\n      setFullscreen(true);\n      return;\n    }\n\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.moxCancelFullscreen) {\n      document.moxCancelFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n    setFullscreen(false);\n  }\n\n  function fullscreenPossible() {\n    const doc = document.documentElement;\n\n    return (\n      doc.requestFullscreen ||\n      doc.moxRequestFullscreen ||\n      doc.webkitRequestFullscreen ||\n      doc.msRequestFullscreen\n    );\n  }\n\n  return {\n    toggleFullscreen,\n    fullscreenPossible,\n    fullscreen\n  };\n}\n","import { EditorState, ContentState } from \"draft-js\";\n\nexport const newDocument = {\n  title: \"Title\",\n  editorState: EditorState.createWithContent(\n    ContentState.createFromText(\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut facilisis lectus at maximus cursus. Vestibulum blandit tellus vel nulla pharetra, eget pellentesque justo facilisis. \\n\\nPellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nam pellentesque dolor dolor, eu suscipit risus rutrum sed. Donec porta nisl quam, et venenatis quam dignissim at. Curabitur eget risus ex.\"\n    )\n  )\n};\n","import { convertFromRaw, convertToRaw, EditorState } from \"draft-js\";\nimport { newDocument } from \"./newDocument\";\n\nexport function useDocumentActions({\n  saves,\n  setSaves,\n  setTitle,\n  setEditorState\n}) {\n  function switchToDocument(document) {\n    const newSaves = saves.map(save => {\n      if (save.id === document.id) {\n        return {\n          ...save,\n          open: true\n        };\n      }\n\n      return {\n        ...save,\n        open: false\n      };\n    });\n\n    setSaves(newSaves);\n    setTitle(document.title);\n    setEditorState(\n      EditorState.createWithContent(convertFromRaw(document.content))\n    );\n  }\n\n  function deleteDocument(document) {\n    /** Delete chosen document */\n    let newSaves = saves.filter(i => i.id !== document.id);\n\n    /** If there are now no documents, start a new one */\n    if (newSaves.length === 0) {\n      newSaves = [\n        {\n          id: 1,\n          content: convertToRaw(newDocument.editorState.getCurrentContent()),\n          title: newDocument.title,\n          date: Date.now(),\n          open: true\n        }\n      ];\n\n      setEditorState(newDocument.editorState);\n      setTitle(newDocument.title);\n    }\n\n    const open = newSaves.filter(i => i.open)[0];\n\n    /**\n     * If there are other documents but none are open,\n     * open the most recently changed one\n     */\n    if (!open) {\n      const latest = newSaves.sort((a, b) => (a.date < b.date ? 1 : -1))[0];\n\n      newSaves = newSaves.map(save => {\n        if (save.id === latest.id) {\n          return {\n            ...save,\n            open: true\n          };\n        }\n\n        return save;\n      });\n\n      setTitle(latest.title);\n      setEditorState(\n        EditorState.createWithContent(convertFromRaw(latest.content))\n      );\n    }\n\n    /** Save */\n    setSaves(newSaves);\n  }\n\n  function createNewDocument() {\n    let newSaves = saves.map(save => ({ ...save, open: false }));\n\n    const newID =\n      saves.length === 0\n        ? 1\n        : saves.sort((a, b) => (a.id < b.id ? 1 : -1))[0].id + 1;\n\n    const newSave = {\n      id: newID,\n      content: convertToRaw(newDocument.editorState.getCurrentContent()),\n      title: newDocument.title,\n      date: Date.now(),\n      open: true\n    };\n\n    newSaves = newSaves.concat(newSave);\n\n    setSaves(newSaves);\n    setTitle(newDocument.title);\n    setEditorState(newDocument.editorState);\n  }\n\n  function saveDocument({ title, editorState }) {\n    const newSaves = saves.map(save => {\n      if (save.open) {\n        return {\n          ...save,\n          title: title,\n          content: convertToRaw(editorState.getCurrentContent()),\n          date: Date.now()\n        };\n      }\n\n      return save;\n    });\n\n    setSaves(newSaves);\n  }\n\n  return {\n    switchToDocument,\n    deleteDocument,\n    createNewDocument,\n    saveDocument\n  };\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport {\n  RichUtils,\n  DefaultDraftBlockRenderMap,\n  getDefaultKeyBinding,\n  KeyBindingUtil\n} from \"draft-js\";\nimport { default as Draft } from \"draft-js-plugins-editor\";\nimport createInlineToolbarPlugin, {\n  Separator\n} from \"draft-js-inline-toolbar-plugin\";\nimport \"draft-js-inline-toolbar-plugin/lib/plugin.css\";\nimport { jsx } from \"@emotion/core\";\nimport { useTheme } from \"emotion-theming\";\nimport {\n  BoldButton,\n  ItalicButton,\n  UnderlineButton,\n  BlockquoteButton,\n  CenterButton\n} from \"./ToolbarButtons\";\nimport { useFullscreen } from \"./useFullscreen\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { useDocumentActions } from \"./useDocumentActions\";\n\nDefaultDraftBlockRenderMap.merge({\n  centered: {\n    element: \"div\"\n  }\n});\n\nconst inlineToolbarPlugin = createInlineToolbarPlugin();\nconst { InlineToolbar } = inlineToolbarPlugin;\n\nexport function Editor({\n  editorState,\n  setEditorState,\n  title,\n  setTitle,\n  saves,\n  setSaves\n}) {\n  const scrollControl = React.useRef(null);\n  const theme = useTheme();\n  const { fullscreen } = useFullscreen();\n  const { saveDocument } = useDocumentActions({\n    saves,\n    setSaves,\n    setTitle,\n    setEditorState\n  });\n\n  function inLastBlock() {\n    const currentBlockKey = editorState.getSelection().getStartKey();\n    const blockMap = editorState\n      .getCurrentContent()\n      .getBlockMap()\n      .keySeq();\n    const currentBlock = blockMap.findIndex(k => k === currentBlockKey) + 1;\n    const lastBlock = blockMap.size;\n\n    return currentBlock === lastBlock;\n  }\n\n  /** Scroll with text as new lines are added */\n  function scrollWithInput(newState) {\n    if (newState.getLastChangeType() !== \"split-block\") return;\n    if (!inLastBlock()) return;\n\n    scrollControl.current.scrollIntoView();\n  }\n\n  function handleChange(newState) {\n    setEditorState(newState);\n    scrollWithInput(newState);\n\n    if (newState.getLastChangeType()) {\n      saveDocument({ editorState: newState, title: title });\n    }\n  }\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n    saveDocument({ editorState: editorState, title: e.target.value });\n  }\n\n  function keyBindingFn(e) {\n    if (KeyBindingUtil.hasCommandModifier(e)) {\n      if (e.keyCode === 74 /** j */) {\n        return \"blockquote\";\n      }\n\n      if (e.keyCode === 75 /** k */) {\n        return \"centered\";\n      }\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  function handleKeyCommand(command, state) {\n    let newState;\n\n    if (command === \"blockquote\" || command === \"centered\") {\n      newState = RichUtils.toggleBlockType(state, command);\n    } else {\n      newState = RichUtils.handleKeyCommand(state, command);\n    }\n\n    if (newState) {\n      setEditorState(newState);\n      return \"handled\";\n    }\n\n    return \"not-handled\";\n  }\n\n  function blockStyleFn(contentBlock) {\n    const type = contentBlock.getType();\n    if (type === \"centered\") {\n      return \"centered\";\n    }\n  }\n\n  return (\n    <div\n      css={{\n        fontFamily: theme.fontFamily,\n        margin: \"auto\",\n        marginTop: fullscreen ? \"2.5em\" : \"1em\",\n        fontSize: \"1.2em\",\n        lineHeight: \"140%\",\n        transition: \"width cubic-bezier(0.4, 0, 0.6, 1) 200ms\",\n        width: \"80%\",\n        [theme.breakpoints.sm]: {\n          width: \"70%\"\n        },\n        [theme.breakpoints.md]: {\n          width: \"50%\"\n        },\n        [theme.breakpoints.lg]: {\n          width: \"45%\"\n        },\n        [theme.breakpoints.xl]: {\n          width: \"35%\"\n        },\n        \"& .centered\": {\n          textAlign: \"center\"\n        },\n        \"& blockquote\": {\n          borderLeft: `5px solid ${theme.blockquote.borderColor}`,\n          margin: 0,\n          marginLeft: \"-0.5em\",\n          paddingLeft: \"0.5em\"\n        },\n\n        /** Toolbar styling */\n        \"& .draftJsToolbar__toolbar__dNtBH\": {\n          background: theme.toolbar.background,\n          border: `1px solid ${theme.toolbar.border}`,\n          boxShadow: theme.toolbar.boxShadow,\n          \"&:after\": {\n            borderTopColor: theme.toolbar.background\n          },\n          \"&:before\": {\n            borderTopColor: theme.toolbar.border\n          }\n        },\n        \"& .draftJsToolbar__button__qi1gf\": {\n          cursor: \"pointer\",\n          background: theme.toolbar.background,\n          color: theme.toolbar.color,\n          transition: \"color ease 0.1s\",\n          \"&:hover\": {\n            background: theme.toolbar.hover.background\n          }\n        },\n        \"& .draftJsToolbar__active__3qcpF\": {\n          color: theme.toolbar.active.color\n        },\n        \"& .draftJsToolbar__separator__3U7qt\": {\n          borderColor: theme.toolbar.separator,\n          height: 20\n        }\n      }}\n    >\n      <TextareaAutosize\n        rows={1}\n        value={title}\n        onChange={handleTitleChange}\n        aria-label=\"Title\"\n        css={{\n          color: theme.color,\n          fontSize: \"1.5em\",\n          width: \"100%\",\n          padding: \"0.25em 0\",\n          resize: \"none\",\n          border: \"none\",\n          fontFamily: \"inherit\",\n          fontWeight: \"bold\",\n          marginBottom: \"0.25em\",\n          background: \"transparent\",\n          \"&:focus\": {\n            outline: \"none\",\n            boxShadow: \"none\"\n          }\n        }}\n      />\n      <Draft\n        editorState={editorState}\n        onChange={handleChange}\n        keyBindingFn={keyBindingFn}\n        handleKeyCommand={handleKeyCommand}\n        plugins={[inlineToolbarPlugin]}\n        blockStyleFn={blockStyleFn}\n        ariaLabel=\"Main text\"\n      />\n      <InlineToolbar\n        theme={{\n          toolbarStyles: theme.toolbar,\n          buttonStyles: theme.toolbar.buttons\n        }}\n      >\n        {externalProps => (\n          <React.Fragment>\n            <BoldButton {...externalProps} />\n            <ItalicButton {...externalProps} />\n            <UnderlineButton {...externalProps} />\n            <Separator {...externalProps} />\n            <BlockquoteButton {...externalProps} />\n            <CenterButton {...externalProps} />\n          </React.Fragment>\n        )}\n      </InlineToolbar>\n      <div\n        ref={scrollControl}\n        css={{\n          marginTop: \"45vh\",\n          display: \"block\",\n          width: \"100%\",\n          height: 1\n        }}\n      />\n    </div>\n  );\n}\n","export const LightTheme = {\n  name: \"light\",\n  fontFamily: \"PT Serif, serif\",\n  breakpoints: {\n    smpx: 600,\n    sm: \"@media (min-width: 600px)\",\n    mdpx: 960,\n    md: \"@media (min-width: 960px)\",\n    lgpx: 1280,\n    lg: \"@media (min-width: 1280px)\",\n    xlpx: 1920,\n    xl: \"@media (min-width: 1920px)\"\n  },\n  background: \"#fff\",\n  color: \"rgba(0, 0, 0, 0.85)\",\n  blockquote: {\n    borderColor: \"#64c6ed\"\n  },\n  toolbar: {\n    background: \"#fff\",\n    boxShadow: \"1px 1px 3px 0 rgba(0, 0, 0, 0.1)\",\n    color: \"rgba(0, 0, 0, 0.65)\",\n    border: \"#ddd\",\n    hover: {\n      background: \"#f3f3f3\"\n    },\n    active: {\n      color: \"#64c6ed\"\n    },\n    separator: \"#ddd\"\n  },\n  button: {\n    background: \"#fff\",\n    color: \"rgba(0, 0, 0, 0.55)\",\n    disabledColor: \"rgba(0, 0, 0, 0.3)\",\n    disabledBackground: \"rgba(0, 0, 0, 0.05)\",\n    hoverColor: \"rgba(0, 0, 0, 0.65)\",\n    hoverBackground: \"rgba(0, 0, 0, 0.05)\",\n    focusBackground: \"rgba(0, 0, 0, 0.1)\"\n  },\n  tooltip: {\n    background: \"#707070\",\n    color: \"rgba(255, 255, 255, 0.95)\",\n    border: \"transparent\"\n  },\n  dialog: {\n    avatarColor: \"#fff\",\n    avatarBackground: \"rgba(0, 0, 0, 0.3)\",\n    itemHover: \"rgba(0, 0, 0, 0.075)\",\n    itemFocus: \"rgba(0, 0, 0, 0.075)\"\n  },\n  drawer: {\n    open: {\n      background: \"rgba(0, 0, 0, 0.03)\",\n      border: \"rgba(0, 0, 0, 0.1)\"\n    },\n    background: \"#fcfcfc\",\n    borderColor: \"#e3e3e3\",\n    shadow: \"0 0 5px 0 rgba(0, 0, 0, 0.2)\",\n    dateColor: \"rgba(0, 0, 0, 0.54)\"\n  },\n  pre: {\n    background: \"rgba(0, 0, 0, 0.05)\"\n  }\n};\n","export const DarkTheme = {\n  name: \"dark\",\n  fontFamily: \"PT Serif, serif\",\n  breakpoints: {\n    smpx: 600,\n    sm: \"@media (min-width: 600px)\",\n    mdpx: 960,\n    md: \"@media (min-width: 960px)\",\n    lgpx: 1280,\n    lg: \"@media (min-width: 1280px)\",\n    xlpx: 1920,\n    xl: \"@media (min-width: 1920px)\"\n  },\n  background: \"#1e1e1e\",\n  color: \"#d8d8d8\",\n  highlight: \"rgba(255, 255, 255, 0.1)\",\n  blockquote: {\n    borderColor: \"#72cfab\"\n  },\n  toolbar: {\n    background: \"#383838\",\n    boxShadow: \"2px 2px 3px 0 rgba(0, 0, 0, 0.5)\",\n    color: \"#c4c4c4\",\n    border: \"#383838\",\n    hover: {\n      background: \"rgba(255, 255, 255, 0.1)\"\n    },\n    active: {\n      color: \"#72cfab\"\n    },\n    separator: \"rgba(255, 255, 255, 0.25)\"\n  },\n  button: {\n    background: \"#1e1e1e\",\n    color: \"#c4c4c4\",\n    disabledColor: \"#565656\",\n    disabledBackground: \"rgba(255, 255, 255, 0.05)\",\n    hoverColor: \"#d8d8d8\",\n    hoverBackground: \"rgba(255, 255, 255, 0.1)\",\n    focusBackground: \"rgba(255, 255, 255, 0.1)\"\n  },\n  tooltip: {\n    background: \"#383838\",\n    color: \"#c4c4c4\",\n    border: \"transparent\"\n  },\n  dialog: {\n    avatarColor: \"#c4c4c4\",\n    avatarBackground: \"rgba(255, 255, 255, 0.05)\",\n    itemHover: \"rgba(255, 255, 255, 0.05)\",\n    itemFocus: \"rgba(255, 255, 255, 0.05)\"\n  },\n  drawer: {\n    background: \"#1e1e1e\",\n    borderColor: \"rgba(255, 255, 255, 0.15)\",\n    shadow: \"0 0 7px 0 rgba(0, 0, 0, 0.8)\",\n    dateColor: \"#a3a3a3\",\n    open: {\n      background: \"rgba(255, 255, 255, 0.05)\",\n      border: \"rgba(255, 255, 255, 0.075)\"\n    }\n  },\n  pre: {\n    background: \"rgba(255, 255, 255, 0.1)\"\n  }\n};\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { useTheme } from \"emotion-theming\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCode, faTextHeight } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMarkdown } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar\n} from \"@material-ui/core\";\nimport { useDownload } from \"./useDownload\";\n\nexport function DownloadDialog({\n  open,\n  setOpen,\n  editorState,\n  title,\n  all = false,\n  saves\n}) {\n  const {\n    downloadDocAsHTML,\n    downloadDocAsMarkdown,\n    downloadDocAsPlaintext,\n    downloadAll\n  } = useDownload();\n  const theme = useTheme();\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  async function handleMarkdownDownload() {\n    if (all) {\n      await downloadAll({\n        saves: saves,\n        format: \"markdown\"\n      });\n      return;\n    }\n\n    downloadDocAsMarkdown({\n      editorState,\n      title\n    });\n  }\n\n  async function handleHTMLDownload(style = \"light\") {\n    if (all) {\n      await downloadAll({\n        saves: saves,\n        format: \"html\",\n        style: style\n      });\n      return;\n    }\n\n    downloadDocAsHTML({\n      title,\n      editorState,\n      style\n    });\n  }\n\n  async function handlePlaintextDownload() {\n    if (all) {\n      await downloadAll({\n        saves: saves,\n        format: \"plaintext\"\n      });\n      return;\n    }\n\n    downloadDocAsPlaintext({\n      title,\n      editorState\n    });\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"download-options-title\"\n      css={{\n        \"& .MuiDialog-paper\": {\n          minWidth: 200,\n          background: theme.background,\n          color: theme.color\n        },\n        \"& .MuiAvatar-root\": {\n          color: theme.dialog.avatarColor,\n          backgroundColor: theme.dialog.avatarBackground\n        },\n        \"& .MuiListItem-root:hover\": {\n          backgroundColor: theme.dialog.itemHover\n        },\n        \"& .MuiListItem-root:focus\": {\n          backgroundColor: theme.dialog.itemFocus\n        }\n      }}\n    >\n      <DialogTitle\n        id=\"download-options-title\"\n        css={{\n          paddingBottom: \"0.3em !important\"\n        }}\n      >\n        {all ? \"Download all\" : \"Download\"}\n      </DialogTitle>\n      <List>\n        <ListItem button onClick={() => handleHTMLDownload(\"light\")}>\n          <ListItemAvatar aria-hidden=\"true\">\n            <Avatar>\n              <FontAwesomeIcon icon={faCode} />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"HTML - Light\" />\n        </ListItem>\n        <ListItem button onClick={() => handleHTMLDownload(\"dark\")}>\n          <ListItemAvatar aria-hidden=\"true\">\n            <Avatar>\n              <FontAwesomeIcon icon={faCode} />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"HTML - Dark\" />\n        </ListItem>\n        <ListItem button onClick={handleMarkdownDownload}>\n          <ListItemAvatar aria-hidden=\"true\">\n            <Avatar>\n              <FontAwesomeIcon icon={faMarkdown} />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Markdown\" />\n        </ListItem>\n        <ListItem button onClick={handlePlaintextDownload}>\n          <ListItemAvatar aria-hidden=\"true\">\n            <Avatar>\n              <FontAwesomeIcon icon={faTextHeight} />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Plain text\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n","import { stateToHTML } from \"draft-js-export-html\";\nimport { saveAs } from \"file-saver\";\nimport { LightTheme } from \"./LightTheme\";\nimport { DarkTheme } from \"./DarkTheme\";\nimport { format } from \"date-fns\";\nimport { stateToMarkdown } from \"draft-js-export-markdown\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport JSZip from \"jszip\";\n\nexport function useDownload() {\n  function htmlStart({ theme, title }) {\n    return `\n      <!doctype html>\n      <html>\n        <head>\n          <link href=\"https://fonts.googleapis.com/css?family=PT+Serif:400,700,400i,700i&display=swap\" rel=\"stylesheet\">\n          <style type=\"text/css\">\n            body {\n              font-family: ${theme.fontFamily};\n              color: ${theme.color};\n              background: ${theme.background};\n              word-wrap: break-word;\n              font-size: 1.2em;\n              line-height: 140%;\n            }\n            .container {\n              margin: auto;\n              width: 80%;\n              margin-bottom: 10em;\n              margin-top: 2em;\n            }\n            ${theme.breakpoints.sm} {\n              .container {\n                width: 70%;\n              }\n            }\n            ${theme.breakpoints.md} {\n              .container {\n                width: 50%;\n              }\n            }\n            ${theme.breakpoints.lg} {\n              .container {\n                width: 45%;\n              }\n            }\n            ${theme.breakpoints.xl} {\n              .container {\n                width: 35%;\n              }\n            }\n            .spacer {\n              width: 100%;\n              margin-top: 3em;\n            }\n            .title {\n              font-size: 1.5em;\n              margin-bottom: 1em;\n            }\n            blockquote {\n              border-left: 5px solid ${theme.blockquote.borderColor};\n              margin: 0;\n              margin-left: -0.5em;\n              padding-left: 0.5em;\n            }\n            .centered {\n              text-align: center;\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"container\">\n            ${\n              title\n                ? `<h1 class=\"title\">${title}</h1>`\n                : '<div class=\"spacer\"></div>'\n            }\n            <div class=\"text\">\n    `;\n  }\n\n  const htmlEnd = `\n          </div>\n        </div>\n      </body>\n    </html>\n  `;\n\n  function formatDate(date) {\n    if (!date) return null;\n    return format(date, \"yyyyMMddHHmmss\");\n  }\n\n  function formatFilename(title, editorState) {\n    if (title) {\n      return title.substring(0, 20);\n    }\n\n    const body = editorState.getCurrentContent().getPlainText();\n    if (body) {\n      return body.substring(0, 15);\n    }\n\n    return \"Untitled\";\n  }\n\n  function docAsHTML({ title, editorState, style = \"light\", date }) {\n    const options = {\n      defaultBlockTag: \"div\",\n      blockRenderers: {\n        centered: block => {\n          if (block.getType() === \"centered\") {\n            return `\n            <div style=\"text-align: center;\" class=\"centered\">\n              ${stateToHTML(\n                { getBlocksAsArray: () => [block] },\n                { defaultBlockTag: \"span\" }\n              )}\n            </div>`;\n          }\n        }\n      }\n    };\n\n    const theme = style === \"light\" ? LightTheme : DarkTheme;\n    const blob = new Blob(\n      [\n        htmlStart({ theme, title }),\n        stateToHTML(editorState.getCurrentContent(), options),\n        htmlEnd\n      ],\n      { type: \"text/html;charset=utf-8\" }\n    );\n\n    const filename = formatFilename(title, editorState);\n\n    return {\n      blob: blob,\n      filename: `${filename}.html`,\n      dateFilename: `${formatDate(date)} ${filename}.html`\n    };\n  }\n\n  function downloadDocAsHTML({ title, editorState, style = \"light\", date }) {\n    const doc = docAsHTML({\n      title,\n      editorState,\n      style,\n      date\n    });\n\n    saveAs(doc.blob, doc.filename, { autobom: true });\n  }\n\n  function docAsMarkdown({ title, editorState, date }) {\n    let markdown = stateToMarkdown(editorState.getCurrentContent());\n    markdown = markdown.replace(/(\\n\\s*){2,}/gi, \"\\n\");\n\n    const titleMarkdown = title ? `# ${title}\\n\\n` : \"\";\n\n    const blob = new Blob([titleMarkdown, markdown], {\n      type: \"text/plain;charset=utf-8\"\n    });\n\n    const filename = formatFilename(title, editorState);\n\n    return {\n      blob: blob,\n      filename: `${filename}.md`,\n      dateFilename: `${formatDate(date)} ${filename}.md`\n    };\n  }\n\n  function downloadDocAsMarkdown({ title, editorState, date }) {\n    const doc = docAsMarkdown({\n      title,\n      editorState,\n      date\n    });\n\n    saveAs(doc.blob, doc.filename, { autobom: true });\n  }\n\n  function docAsPlaintext({ title, editorState, date }) {\n    const blob = new Blob([\n      `${title}\\n\\n`,\n      editorState.getCurrentContent().getPlainText()\n    ]);\n\n    const filename = formatFilename(title, editorState);\n\n    return {\n      blob: blob,\n      filename: `${filename}.txt`,\n      dateFilename: `${formatDate(date)} ${filename}.txt`\n    };\n  }\n\n  function downloadDocAsPlaintext({ title, editorState, date }) {\n    const doc = docAsPlaintext({\n      title,\n      editorState,\n      date\n    });\n\n    saveAs(doc.blob, doc.filename, { autobom: true });\n  }\n\n  async function downloadAll({ saves, format = \"plaintext\", style = \"light\" }) {\n    const docs = saves.map(save => ({\n      ...save,\n      editorState: EditorState.createWithContent(convertFromRaw(save.content)),\n      style: style\n    }));\n\n    let formattedDocs;\n\n    if (format === \"html\") {\n      formattedDocs = docs.map(doc => docAsHTML(doc));\n    } else if (format === \"markdown\") {\n      formattedDocs = docs.map(doc => docAsMarkdown(doc));\n    } else {\n      formattedDocs = docs.map(doc => docAsPlaintext(doc));\n    }\n\n    const zip = new JSZip();\n    formattedDocs.forEach(doc => zip.file(doc.dateFilename, doc.blob));\n\n    const zipBlob = await zip.generateAsync({ type: \"blob\" });\n    saveAs(zipBlob, `${formatDate(Date.now())} Files.zip`);\n  }\n\n  return {\n    docAsHTML,\n    downloadDocAsHTML,\n    docAsMarkdown,\n    downloadDocAsMarkdown,\n    docAsPlaintext,\n    downloadDocAsPlaintext,\n    downloadAll,\n    formatFilename\n  };\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { useTheme } from \"emotion-theming\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\n\nexport function KeyboardShortcuts({ open, setOpen }) {\n  const theme = useTheme();\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"keyboard-shortcuts-title\"\n      aria-describedby=\"keyboard-shortcuts-content\"\n      css={{\n        \"& .MuiDialog-paper\": {\n          minWidth: 200,\n          background: theme.background,\n          color: theme.color\n        },\n        \"& .MuiAvatar-root\": {\n          color: theme.dialog.avatarColor,\n          backgroundColor: theme.dialog.avatarBackground\n        },\n        \"& .MuiListItem-root:hover\": {\n          backgroundColor: theme.dialog.itemHover\n        },\n        \"& .MuiListItem-root:focus\": {\n          backgroundColor: theme.dialog.itemFocus\n        },\n        \"& #keyboard-shortcuts-content\": {\n          color: theme.color\n        },\n        \"& .pre\": {\n          display: \"inline-block\",\n          background: theme.pre.background,\n          padding: \"0 0.5em\",\n          margin: \"0.5em\",\n          marginRight: \"1em\",\n          fontFamily: \"Roboto Mono\"\n        }\n      }}\n    >\n      <DialogTitle\n        id=\"keyboard-shortcuts-title\"\n        css={{\n          paddingBottom: \"0.3em !important\"\n        }}\n      >\n        Keyboard Shortcuts\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"keyboard-shortcuts-content\">\n          <span className=\"pre\" aria-labelledby=\"shortcuts-bold-label\">\n            Ctrl + B\n          </span>\n          <span id=\"shortcuts-bold-label\">Bold</span>\n          <br />\n          <span className=\"pre\" aria-labelledby=\"shortcuts-italic-label\">\n            Ctrl + I\n          </span>\n          <span id=\"shortcuts-italic-label\">Italics</span>\n          <br />\n          <span className=\"pre\" aria-labelledby=\"shortcuts-underline-label\">\n            Ctrl + U\n          </span>\n          <span id=\"shortcuts-underline-label\">Underline</span>\n          <br />\n          <span className=\"pre\" aria-labelledby=\"shortcuts-blockquote-label\">\n            Ctrl + J\n          </span>\n          <span id=\"shortcuts-blockquote-label\">Blockquote</span>\n          <br />\n          <span className=\"pre\" aria-labelledby=\"shortcuts-center-label\">\n            Ctrl + K\n          </span>\n          <span id=\"shortcuts-center-label\">Center</span>\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { useFullscreen } from \"./useFullscreen\";\nimport { useTheme } from \"emotion-theming\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExpandArrowsAlt,\n  faAdjust,\n  faDownload,\n  faSave,\n  faPlusCircle,\n  faEye,\n  faCalculator,\n  faKeyboard\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { DownloadDialog } from \"./DownloadDialog\";\nimport { useDocumentActions } from \"./useDocumentActions\";\nimport { KeyboardShortcuts } from \"./KeyboardShortcuts\";\n\nexport function Menu({\n  themeName,\n  setThemeName,\n  editorState,\n  title,\n  saves,\n  setSaves,\n  setTitle,\n  setEditorState,\n  keepIconsVisible,\n  setKeepIconsVisible\n}) {\n  const theme = useTheme();\n  const [downloadDialogOpen, setDownloadDialogOpen] = React.useState(false);\n  const [keyboardShortcutsOpen, setKeyboardShortcutsOpen] = React.useState(\n    false\n  );\n  const [shown, setShown] = React.useState(true);\n  const [timer, setTimer] = React.useState(null);\n  const [wordCount, setWordCount] = React.useState(0);\n  const { toggleFullscreen, fullscreenPossible, fullscreen } = useFullscreen();\n  const { createNewDocument } = useDocumentActions({\n    saves,\n    setSaves,\n    setTitle,\n    setEditorState\n  });\n\n  const fullscreenTitle = fullscreen ? \"Exit fullscreen\" : \"Fullscreen\";\n  const themeTitle = themeName === \"light\" ? \"Dark mode\" : \"Light mode\";\n\n  function calculateWordCount() {\n    setWordCount(\n      editorState\n        .getCurrentContent()\n        .getPlainText()\n        .split(/\\s+/).length\n    );\n  }\n\n  function toggleTheme() {\n    if (themeName === \"light\") {\n      setThemeName(\"dark\");\n    } else {\n      setThemeName(\"light\");\n    }\n  }\n\n  React.useEffect(() => {\n    function handleMousemove() {\n      clearInterval(timer);\n      setShown(true);\n    }\n\n    window.addEventListener(\"mousemove\", handleMousemove);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMousemove);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (!timer) {\n      setTimer(setInterval(() => setShown(false), 10000));\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timer]);\n\n  return (\n    <React.Fragment>\n      <div\n        css={{\n          position: \"fixed\",\n          top: 0,\n          right: 0,\n          width: 50,\n          textAlign: \"center\",\n          padding: \"0.25em 0.5em\",\n          opacity: shown || keepIconsVisible ? 1 : 0,\n          transition: \"opacity ease 1s\",\n          \"&:hover\": {\n            opacity: \"1 !important\"\n          },\n          \"& .MuiIconButton-root\": {\n            color: theme.button.color,\n            fontSize: \"1.3em !important\",\n            \"&:hover, &:active\": {\n              background: theme.button.hoverBackground,\n              color: theme.button.hoverColor\n            },\n            \"&:focus\": {\n              background: theme.button.focusBackground\n            }\n          }\n        }}\n      >\n        {fullscreenPossible() && (\n          <Tooltip title={fullscreenTitle} placement=\"left\">\n            <IconButton\n              disableFocusRipple\n              onClick={toggleFullscreen}\n              onFocus={() => setShown(true)}\n              aria-label={fullscreenTitle}\n            >\n              <FontAwesomeIcon icon={faExpandArrowsAlt} />\n            </IconButton>\n          </Tooltip>\n        )}\n        <Tooltip title=\"New document\" placement=\"left\">\n          <IconButton\n            disableFocusRipple\n            onClick={createNewDocument}\n            onFocus={() => setShown(true)}\n            aria-label=\"New document\"\n          >\n            <FontAwesomeIcon icon={faPlusCircle} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={themeTitle} placement=\"left\">\n          <IconButton\n            disableFocusRipple\n            onClick={toggleTheme}\n            onFocus={() => setShown(true)}\n            aria-label={themeTitle}\n          >\n            <FontAwesomeIcon icon={faAdjust} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Download this document\" placement=\"left\">\n          <IconButton\n            disableFocusRipple\n            onClick={() => setDownloadDialogOpen(true)}\n            onFocus={() => setShown(true)}\n            aria-label=\"Download this document\"\n          >\n            <FontAwesomeIcon icon={faDownload} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Keyboard shortcuts\" placement=\"left\">\n          <IconButton\n            disableFocusRipple\n            onClick={() => setKeyboardShortcutsOpen(true)}\n            onFocus={() => setShown(true)}\n            aria-label=\"Keyboard shortcuts\"\n          >\n            <FontAwesomeIcon icon={faKeyboard} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Keep icons visible\" placement=\"left\">\n          <IconButton\n            disableFocusRipple\n            onClick={() => setKeepIconsVisible(!keepIconsVisible)}\n            onFocus={() => setShown(true)}\n            aria-label=\"Keep icons visible\"\n            css={{\n              color: keepIconsVisible\n                ? theme.button.color\n                : `${theme.button.disabledColor} !important`\n            }}\n          >\n            <FontAwesomeIcon icon={faEye} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip\n          title={`Word count: ${wordCount.toLocaleString()}`}\n          placement=\"left\"\n        >\n          <IconButton\n            onMouseOver={calculateWordCount}\n            onFocus={calculateWordCount}\n            disableRipple\n            aria-label={`Word count: ${wordCount.toLocaleString()}`}\n            css={{\n              color: `${theme.button.disabledColor} !important`,\n              \"&:hover, &:active, &:focus\": {\n                backgroundColor: `${theme.button.disabledBackground} !important`\n              }\n            }}\n          >\n            <FontAwesomeIcon icon={faCalculator} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Your work autosaves\" placement=\"left\">\n          <IconButton\n            aria-label=\"Your work autosaves\"\n            disableRipple\n            css={{\n              color: `${theme.button.disabledColor} !important`,\n              \"&:hover, &:active, &:focus\": {\n                backgroundColor: `${theme.button.disabledBackground} !important`\n              }\n            }}\n          >\n            <FontAwesomeIcon icon={faSave} />\n          </IconButton>\n        </Tooltip>\n        <DownloadDialog\n          open={downloadDialogOpen}\n          setOpen={setDownloadDialogOpen}\n          editorState={editorState}\n          title={title}\n        />\n        <KeyboardShortcuts\n          open={keyboardShortcutsOpen}\n          setOpen={setKeyboardShortcutsOpen}\n        />\n      </div>\n    </React.Fragment>\n  );\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { useTheme } from \"emotion-theming\";\nimport {\n  Drawer,\n  IconButton,\n  Tooltip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { format } from \"date-fns\";\nimport {\n  faFolderOpen,\n  faCaretRight,\n  faCaretLeft,\n  faTrashAlt,\n  faDownload\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useDocumentActions } from \"./useDocumentActions\";\nimport { DownloadDialog } from \"./DownloadDialog\";\n\nexport function DocumentsDrawer({\n  saves,\n  setSaves,\n  setTitle,\n  setEditorState,\n  keepIconsVisible,\n  open,\n  setOpen\n}) {\n  const [showButton, setShowButton] = React.useState(true);\n  const [timer, setTimer] = React.useState(null);\n  const [downloadDialogOpen, setDownloadDialogOpen] = React.useState(false);\n  const theme = useTheme();\n  const drawerWidth = 275;\n  const { switchToDocument, deleteDocument } = useDocumentActions({\n    saves,\n    setSaves,\n    setTitle,\n    setEditorState\n  });\n  const closeButton = React.useRef(null);\n\n  React.useEffect(() => {\n    function handleMousemove() {\n      clearInterval(timer);\n      setShowButton(true);\n    }\n\n    window.addEventListener(\"mousemove\", handleMousemove);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMousemove);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (!timer) {\n      setTimer(setInterval(() => setShowButton(false), 10000));\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timer]);\n\n  React.useEffect(() => {\n    if (open) {\n      closeButton.current.focus();\n    }\n  }, [open]);\n\n  function formatDocumentTitle(title, content) {\n    if (title) {\n      return title;\n    }\n\n    const text = content.blocks[0].text;\n    if (text) {\n      return text.substring(0, 50);\n    }\n\n    return \"Untitled\";\n  }\n\n  return (\n    <div\n      css={{\n        \"& .MuiIconButton-root\": {\n          color: `${theme.button.color} !important`,\n          \"&:active, &:hover\": {\n            backgroundColor: `${theme.button.hoverBackground} !important`,\n            color: `${theme.button.hoverColor} !important`\n          },\n          \"&:focus\": {\n            backgroundColor: `${theme.button.focusBackground} !important`\n          }\n        }\n      }}\n    >\n      {!open && (\n        <div\n          css={{\n            position: \"fixed\",\n            top: \"0.5em\",\n            left: 0,\n            marginLeft: 0,\n            transition: \"opacity ease 1s\",\n            opacity: keepIconsVisible || showButton ? 1 : 0\n          }}\n        >\n          <Tooltip placement=\"right\" title=\"View documents\">\n            <IconButton\n              disableFocusRipple\n              onClick={() => setOpen(!open)}\n              onFocus={() => setShowButton(true)}\n              aria-label=\"View documents\"\n              css={{\n                fontSize: \"1.3em !important\",\n                minWidth: \"0px !important\",\n                padding: \"0.5em !important\",\n                borderRadius: \"0px 4px 4px 0px !important\"\n              }}\n            >\n              <FontAwesomeIcon icon={faFolderOpen} />\n              <FontAwesomeIcon\n                icon={faCaretRight}\n                css={{\n                  marginLeft: \"0.5em\"\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n        </div>\n      )}\n      <Drawer\n        open={open}\n        onClose={() => setOpen(false)}\n        variant=\"persistent\"\n        anchor=\"left\"\n        SlideProps={{\n          timeout: 200\n        }}\n        css={{\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n            background: theme.drawer.background,\n            borderRight: `1px solid ${theme.drawer.borderColor} !important`,\n            boxShadow: theme.drawer.shadow,\n            color: theme.color\n          }\n        }}\n      >\n        <React.Fragment>\n          <div\n            css={{\n              height: 42,\n              padding: \"0.5em\",\n              borderBottom: `1px solid ${theme.drawer.open.border}`,\n              boxShadow: `0 0 7px 0 ${theme.drawer.open.border}`,\n              \"& .MuiIconButton-root\": {\n                fontSize: \"1.3em !important\",\n                minWidth: \"0px !important\",\n                padding: \"0.5em !important\",\n                borderRadius: \"4px !important\"\n              }\n            }}\n          >\n            <Tooltip placement=\"right\" title=\"Download all\">\n              <IconButton\n                disableFocusRipple\n                onClick={() => setDownloadDialogOpen(true)}\n                aria-label=\"Download all\"\n              >\n                <FontAwesomeIcon icon={faDownload} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip placement=\"left\" title=\"Close drawer\">\n              <IconButton\n                ref={closeButton}\n                disableFocusRipple\n                onClick={() => setOpen(false)}\n                aria-label=\"Close drawer\"\n                css={{\n                  float: \"right\"\n                }}\n              >\n                <FontAwesomeIcon\n                  icon={faCaretLeft}\n                  css={{\n                    marginRight: \"0.5em\"\n                  }}\n                />\n                <FontAwesomeIcon icon={faFolderOpen} />\n              </IconButton>\n            </Tooltip>\n          </div>\n          <div\n            css={{\n              height: \"calc(100% - 42px)\",\n              overflow: \"auto\"\n            }}\n          >\n            <List>\n              {saves\n                .sort((a, b) => (a.date < b.date ? 1 : -1))\n                .map(save => (\n                  <ListItem\n                    key={save.id}\n                    button\n                    dense\n                    onClick={() => switchToDocument(save)}\n                    data-testid={`switch_to_${save.id}`}\n                    css={{\n                      background: save.open\n                        ? `${theme.drawer.open.background} !important`\n                        : \"transparent\",\n                      borderTop: save.open\n                        ? `1px solid ${theme.drawer.open.border} !important`\n                        : \"1px solid transparent !important\",\n                      borderBottom: save.open\n                        ? `1px solid ${theme.drawer.open.border} !important`\n                        : \"1px solid transparent !important\",\n                      \"&:hover, &:active\": {\n                        background: `${theme.button.hoverBackground} !important`\n                      },\n                      \"&:focus\": {\n                        background: `${theme.button.focusBackground} !important`\n                      }\n                    }}\n                  >\n                    <ListItemText\n                      primary={formatDocumentTitle(save.title, save.content)}\n                      secondary={format(save.date, \"MM/dd/yyyy - h:mmaaaaa'm'\")}\n                      css={{\n                        textOverflow: \"ellipsis\",\n                        overflow: \"hidden\",\n                        paddingRight: \"1em\",\n                        whiteSpace: \"nowrap\",\n                        \"& .MuiListItemText-secondary\": {\n                          fontSize: \"0.75em\",\n                          color: `${theme.drawer.dateColor} !important`\n                        }\n                      }}\n                    />\n                    <ListItemSecondaryAction>\n                      <Tooltip placement=\"bottom\" title=\"Delete\">\n                        <IconButton\n                          disableFocusRipple\n                          onClick={() => deleteDocument(save)}\n                          css={{\n                            fontSize: \"1.1em !important\"\n                          }}\n                          data-testid={`delete_${save.id}`}\n                        >\n                          <FontAwesomeIcon icon={faTrashAlt} />\n                        </IconButton>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n            </List>\n          </div>\n        </React.Fragment>\n      </Drawer>\n      <DownloadDialog\n        open={downloadDialogOpen}\n        setOpen={setDownloadDialogOpen}\n        all={true}\n        saves={saves}\n      />\n    </div>\n  );\n}\n","/** @jsx jsx */\nimport React from \"react\";\nimport { Editor } from \"./Editor\";\nimport { jsx, Global } from \"@emotion/core\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { LightTheme } from \"./LightTheme\";\nimport { DarkTheme } from \"./DarkTheme\";\nimport { Menu } from \"./Menu\";\nimport { DocumentsDrawer } from \"./DocumentsDrawer\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { newDocument } from \"./newDocument\";\n\nfunction App() {\n  const [themeName, setThemeName] = React.useState(\"dark\");\n  const [title, setTitle] = React.useState(newDocument.title);\n  const [saves, setSaves] = React.useState([]);\n  const [editorState, setEditorState] = React.useState(newDocument.editorState);\n  const [keepIconsVisible, setKeepIconsVisible] = React.useState(false);\n  const [drawerOpen, setDrawerOpen] = React.useState();\n  const theme = themeName === \"light\" ? LightTheme : DarkTheme;\n\n  /** Load documents */\n  React.useEffect(() => {\n    const localStorage = window.localStorage.getItem(\"saves\");\n\n    if (localStorage) {\n      const parsed = JSON.parse(localStorage);\n      setSaves(parsed);\n\n      const open = parsed.filter(i => i.open)[0];\n      if (open) {\n        setTitle(open.title);\n        setEditorState(\n          EditorState.createWithContent(convertFromRaw(open.content))\n        );\n        setEditorState(e => EditorState.moveFocusToEnd(e));\n      }\n    }\n  }, []);\n\n  /** Save documents */\n  React.useEffect(() => {\n    window.localStorage.setItem(\"saves\", JSON.stringify(saves));\n  }, [saves]);\n\n  /** Load settings */\n  React.useEffect(() => {\n    let settings = window.localStorage.getItem(\"settings\");\n\n    if (settings) {\n      settings = JSON.parse(settings);\n      setThemeName(settings.themeName);\n      setDrawerOpen(settings.drawerOpen);\n      setKeepIconsVisible(settings.keepIconsVisible);\n    }\n  }, []);\n\n  /** Save settings */\n  React.useEffect(() => {\n    window.localStorage.setItem(\n      \"settings\",\n      JSON.stringify({\n        themeName,\n        keepIconsVisible,\n        drawerOpen\n      })\n    );\n  }, [themeName, keepIconsVisible, drawerOpen]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Global\n        styles={{\n          \"::selection\": {\n            background: theme.highlight\n          },\n          body: {\n            background: theme.background,\n            color: theme.color,\n            transition:\n              \"background cubic-bezier(0.4, 0, 0.6, 1) 200ms, color cubic-bezier(0.4, 0, 0.6, 1) 200ms\"\n          },\n          \".MuiTooltip-tooltip\": {\n            backgroundColor: `${theme.tooltip.background} !important`,\n            color: `${theme.tooltip.color} !important`,\n            border: `1px solid ${theme.tooltip.border} !important`,\n            fontSize: \"0.8em !important\"\n          }\n        }}\n      />\n      <DocumentsDrawer\n        saves={saves}\n        setSaves={setSaves}\n        keepIconsVisible={keepIconsVisible}\n        setTitle={setTitle}\n        setEditorState={setEditorState}\n        open={drawerOpen}\n        setOpen={setDrawerOpen}\n      />\n      <Menu\n        setThemeName={setThemeName}\n        themeName={themeName}\n        editorState={editorState}\n        setEditorState={setEditorState}\n        title={title}\n        setTitle={setTitle}\n        saves={saves}\n        setSaves={setSaves}\n        keepIconsVisible={keepIconsVisible}\n        setKeepIconsVisible={setKeepIconsVisible}\n      />\n      <Editor\n        editorState={editorState}\n        setEditorState={setEditorState}\n        title={title}\n        setTitle={setTitle}\n        saves={saves}\n        setSaves={setSaves}\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}